明白了，你这边 LittleFS 初始化失败、显示“无可用空间”，很可能出在 Flash 没有擦除/初始化为 0xFF 或者 写失败 导致元数据损坏。

我这边整理出一份【挂载失败 + 显示无可用空间】的常见排查清单，咱们逐项看看：

✅ 1. 是否第一次挂载时格式化失败？
你是否按照如下顺序做了第一次挂载 + 格式化？

c
复制
编辑
int err = lfs_mount(&lfs, &cfg);
if (err) {
    lfs_format(&lfs, &cfg);       // 格式化擦除所有块
    err = lfs_mount(&lfs, &cfg);  // 再次挂载
}
🔺 如果 lfs_format() 失败，它不会清除块头（block header），下次 mount 就会识别出“空间不可用”或“文件系统损坏”。

✅ 2. Flash 是否真正擦除了？（关键）
LittleFS 默认认为“空块 = 全部 0xFF”。你必须确保 Flash10 初始状态每个字节都是 0xFF。

建议你在格式化之前，手动擦除 Flash10 区域一次：

c
复制
编辑
for (int i = 0; i < 4; i++) {
    flash10_erase(0x086000 + i * 2048);
}
或者直接添加初始化流程：

c
复制
编辑
flash10_init();
for (int i = 0; i < 4; i++) flash10_erase(0x086000 + i * 2048);
lfs_format(&lfs, &cfg);
lfs_mount(&lfs, &cfg);
✅ 3. 写失败是否被忽略？
如果 flash10_prog() 返回失败（比如地址未对齐 / ECC 错误），LittleFS 会继续认为写成功了，后面就会崩掉。

建议你加一段调试信息：

c
复制
编辑
int flash10_prog(uint32_t addr, const void *data, uint32_t size) {
    ...
    Fapi_StatusType status = Fapi_issueProgrammingCommand(...);
    if (status != Fapi_Status_Success) {
        printf("Flash write failed at 0x%08lx\n", addr);
        return -1;
    }
}
✅ 4. block_count / block_size 是否和配置一致？
你的 block_count、block_size 必须和物理擦除块完全匹配。例如：

block_size 必须 = Flash 擦除粒度（2KB）

block_count 必须 = 可用 Flash 大小 / block_size

例如你用 Flash10：大小 8KB，每块 2KB，应该是：

c
复制
编辑
cfg.block_size = 2048;
cfg.block_count = 4;
✅ 5. 是否用 const 数组模拟了 Flash？⚠️
你写的是：

c
复制
编辑
#pragma DATA_SECTION(lfs_flash_storage, ".littlefs_storage");
const uint8_t lfs_flash_storage[0x2000];
🔺 const 是不可写的！你无法用 Flash API 写入 const 区域。建议改为：

c
复制
编辑
#pragma DATA_SECTION(lfs_flash_storage, ".littlefs_storage");
uint8_t lfs_flash_storage[0x2000];  // 去掉 const
当然，在实际写入时你是通过 0x086000 的绝对地址去写的，那就无所谓。但如果你在某处错误地尝试写 lfs_flash_storage 数组，那会失败。

✅ 6. Flash ECC 或 CPU 锁区问题？
检查是否有 ECC 校验错误：可尝试临时关闭 ECC 检测验证，或者使用 TI 提供的 FlashAPI 里带 ECC 的写函数。

Flash10 是否被写保护？可检查 Z1_CSM_xxx 是否锁住了 Flash10 区域。

🔍 进一步调试建议
在 lfs_format 和 lfs_mount 返回失败时打印错误码，例如：

c
复制
编辑
int ret = lfs_format(&lfs, &cfg);
if (ret < 0) printf("Format failed: %d\n", ret);
LittleFS 的错误码定义参考：


错误码	含义
-2	无效块
-5	没有空间
-84	I/O 错误
-88	坏块
✅ 推荐你尝试这个测试代码（格式化并写入一个文件）
c
复制
编辑
void test_lfs10_write() {
    flash10_init();

    // 擦除所有 block
    for (int i = 0; i < 4; i++) {
        if (flash10_erase(0x086000 + i * 2048) < 0) {
            printf("Erase block %d failed\n", i);
        }
    }

    // 初始化 LittleFS
    lfs_flash10_config_init();
    if (lfs_format(&lfs, &cfg) != 0) {
        printf("LFS format failed\n");
        return;
    }

    if (lfs_mount(&lfs, &cfg) != 0) {
        printf("LFS mount failed\n");
        return;
    }

    const char *msg = "Hello from Flash10\n";
    if (lfs_flash10_file_write("hello.txt", msg, strlen(msg)) < 0) {
        printf("File write failed\n");
    } else {
        printf("File write success\n");
    }

    lfs_unmount(&lfs);
}
可以的话，你贴一下你挂载失败的日志、报错代码、cfg 的配置内容，我可以帮你精准定位。

要不要我也帮你加一份 Flash10 的 dump 函数，打印出每个 sector 的 16 字节内容来做验证？








